name: CI/CD Pipeline

on: [ push ]

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]

    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: python -m pip install --upgrade pip poetry
      - name: Create virtualenv and install dependencies
        run: poetry install
      - name: Static analysis
        run: poetry run pre-commit run --all-files
      - name: Run tests
        run: |
          poetry run pytest --cov=src --cov-report=xml
      - name: Upload coverage report
        uses: codecov/codecov-action@master
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  upload:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.7
        uses: actions/setup-python@master
        with:
          python-version: 3.7
      - name: Install Poetry
        run: python -m pip install --upgrade pip poetry
      - name: Build distribution packages
        run: poetry build
      - name: Publish distribution packages to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
          verbose: true
      - name: Publish package to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
